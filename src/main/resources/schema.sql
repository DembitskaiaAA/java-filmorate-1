
create table IF NOT EXISTS users
(
   id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   name varchar(100),
   email varchar(100) NOT NULL,
   login varchar(100) NOT NULL,
   birthday date
);

create table IF NOT EXISTS genre
(
   id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   name varchar(100) NOT NULL,
   CONSTRAINT uq_genres_name UNIQUE (name)
);


create table IF NOT EXISTS mpa
(
   id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   name varchar(100) NOT NULL,
   description varchar(200),
   CONSTRAINT uq_mpa_name UNIQUE (name)
);


create table IF NOT EXISTS friendship
(
   id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   user_id   INTEGER REFERENCES users (id),
   friend_id INTEGER REFERENCES users (id),
   is_accepted boolean,
   CONSTRAINT uq_friendship UNIQUE (user_id,friend_id)
);

ALTER TABLE friendship ALTER COLUMN is_accepted SET DEFAULT FALSE;

create table IF NOT EXISTS films
(
   id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   name varchar(100) NOT NULL,
   description varchar(200),
   mpa_id INTEGER REFERENCES mpa (id),
   release_date date,
   duration int
);

create table IF NOT EXISTS films_genre
(
   id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   film_id   INTEGER REFERENCES films (id),
   genre_id INTEGER REFERENCES genre (id),
   CONSTRAINT uq_films_genre UNIQUE (film_id,genre_id)
);

create table IF NOT EXISTS films_like
(
   id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   film_id   INTEGER REFERENCES films (id),
   user_id INTEGER REFERENCES users (id)
);